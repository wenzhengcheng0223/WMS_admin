<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.zmn.repository.dao.RepositoryMessageMapper" >
  <resultMap id="BaseResultMap" type="team.zmn.repository.pojo.RepositoryMessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="repository_id" property="repositoryId" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="VARCHAR" />
    <result column="p_balance" property="pBalance" jdbcType="REAL" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from repository_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="team.zmn.repository.pojo.RepositoryMessage" >
    insert into repository_message (id, repository_id, p_id, 
      p_balance)
    values (#{id,jdbcType=VARCHAR}, #{repositoryId,jdbcType=VARCHAR}, #{pId,jdbcType=VARCHAR}, 
      #{pBalance,jdbcType=REAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="team.zmn.repository.pojo.RepositoryMessage" >
    update repository_message
    set repository_id = #{repositoryId,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR},
      p_balance = #{pBalance,jdbcType=REAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, repository_id, p_id, p_balance
    from repository_message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultType="team.zmn.repository.pojo.RepositoryMessageDto" >
    SELECT
        rem.id,	re.repository_name,	re.kinds,	rem.p_id,	pm.p_name,	rem.p_balance
    FROM
        repository_message AS rem,	repository AS re,	product_message AS pm
    WHERE
        rem.repository_id = re.repository_id 	AND rem.p_id = pm.p_id
  </select>
</mapper>